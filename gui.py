import tkinter as tk
from tkinter import messagebox

def calculate_land_tax(land_value, land_type):
    """
    ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏†‡∏≤‡∏©‡∏µ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô
    """
    tax_rate = 0

    if land_type == 1:  # ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡∏Å‡∏£‡∏£‡∏°
        if land_value <= 750000:
            tax_rate = 0
        elif land_value <= 50000000:
            tax_rate = 0.001
        elif land_value <= 100000000:
            tax_rate = 0.002
        else:
            tax_rate = 0.03

    elif land_type == 2:  # ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢
        if land_value <= 10000000:
            tax_rate = 0.002
        elif land_value <= 50000000:
            tax_rate = 0.003
        elif land_value <= 100000000:
            tax_rate = 0.005
        else:
            tax_rate = 0.01

    elif land_type == 3:  # ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏û‡∏≤‡∏ì‡∏¥‡∏ä‡∏¢‡∏Å‡∏£‡∏£‡∏°
        if land_value <= 50000000:
            tax_rate = 0.003
        elif land_value <= 100000000:
            tax_rate = 0.005
        else:
            tax_rate = 0.01

    elif land_type == 4:  # ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡∏£‡∏Å‡∏£‡πâ‡∏≤‡∏á‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤
        if land_value <= 50000000:
            tax_rate = 0.005
        elif land_value <= 100000000:
            tax_rate = 0.01
        else:
            tax_rate = 0.015
    else:
        return "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 1-4"

    return land_value * tax_rate

def calculate():
    try:
        land_value = float(entry_value.get())
        land_type = land_type_var.get()

        if land_type == 0:
            messagebox.showwarning("‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô")
            return

        tax = calculate_land_tax(land_value, land_type)

        if isinstance(tax, str):
            result_label.config(text=tax, fg="red")
        else:
            result_label.config(text=f"üíµ ‡∏†‡∏≤‡∏©‡∏µ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡∏Ñ‡∏∑‡∏≠: {tax:,.2f} ‡∏ö‡∏≤‡∏ó", fg="green")
            status_bar.config(text="‚úÖ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

    except ValueError:
        messagebox.showerror("‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç")
        status_bar.config(text="‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì")

def on_enter(event):
    event.widget.config(bg="#5F9EA0", fg="white")

def on_leave(event):
    event.widget.config(bg="#00bfff", fg="white")

def exit_program():
    if messagebox.askokcancel("‡∏≠‡∏≠‡∏Å", "‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?"):
        root.destroy()

# --- GUI ---
root = tk.Tk()
root.title("üí∞ ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏†‡∏≤‡∏©‡∏µ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô")
root.geometry("500x600")
root.config(bg="#f0f8ff")

# --- ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° ---
header = tk.Label(root, text="üí∞ ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏†‡∏≤‡∏©‡∏µ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô", font=("TH Sarabun New", 26, "bold"), bg="#4682B4", fg="white", pady=15)
header.pack(fill="x")

# --- ‡∏Å‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å ---
main_frame = tk.Frame(root, bg="#e6f2ff", padx=20, pady=20, highlightbackground="#87CEFA", highlightthickness=2)
main_frame.pack(pady=20, padx=20, fill="both", expand=True)

# ‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô
tk.Label(main_frame, text="üíµ ‡∏Å‡∏£‡∏≠‡∏Å‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô (‡∏ö‡∏≤‡∏ó):", font=("TH Sarabun New", 16), bg="#e6f2ff").pack(pady=5)
entry_value = tk.Entry(main_frame, font=("TH Sarabun New", 16), width=20, justify='center')
entry_value.pack()

# ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô
tk.Label(main_frame, text="üè° ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô:", font=("TH Sarabun New", 16), bg="#e6f2ff").pack(pady=10)
land_type_var = tk.IntVar()

types = [
    ("1Ô∏è‚É£ ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡∏Å‡∏£‡∏£‡∏°", 1),
    ("2Ô∏è‚É£ ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢", 2),
    ("3Ô∏è‚É£ ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏û‡∏≤‡∏ì‡∏¥‡∏ä‡∏¢‡∏Å‡∏£‡∏£‡∏°", 3),
    ("4Ô∏è‚É£ ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡∏£‡∏Å‡∏£‡πâ‡∏≤‡∏á‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤", 4)
]

for text, value in types:
    tk.Radiobutton(main_frame, text=text, variable=land_type_var, value=value, font=("TH Sarabun New", 14),
                   bg="#e6f2ff", activebackground="#B0E0E6").pack(anchor='w')

# ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏†‡∏≤‡∏©‡∏µ
calculate_btn = tk.Button(main_frame, text="üìä ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏†‡∏≤‡∏©‡∏µ", command=calculate, font=("TH Sarabun New", 16), bg="#00bfff", fg="white", width=15)
calculate_btn.pack(pady=15)
calculate_btn.bind("<Enter>", on_enter)
calculate_btn.bind("<Leave>", on_leave)

# ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
result_label = tk.Label(main_frame, text="", font=("TH Sarabun New", 18, "bold"), bg="#e6f2ff")
result_label.pack(pady=10)

# ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏≠‡∏Å
exit_btn = tk.Button(root, text="‚ùå ‡∏≠‡∏≠‡∏Å", command=exit_program, font=("TH Sarabun New", 14), bg="#ff6347", fg="white", width=10)
exit_btn.pack(pady=10)
exit_btn.bind("<Enter>", lambda e: exit_btn.config(bg="#CD5C5C"))
exit_btn.bind("<Leave>", lambda e: exit_btn.config(bg="#ff6347"))

# ‡πÅ‡∏ñ‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (Status Bar)
status_bar = tk.Label(root, text="üí° ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô", bd=1, relief="sunken", anchor="w", bg="#dcdcdc", font=("TH Sarabun New", 12))
status_bar.pack(side="bottom", fill="x")

root.mainloop()